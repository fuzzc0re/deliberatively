{"version":3,"sources":["hooks/useVoteMarketContext.ts","models/VoteParticipant.ts","models/VoteAlternative.ts","utils/validators.ts","context/VoteMarket.tsx","components/styled/Button.tsx","utils/db.ts","components/dialogs/WalletConnect/WalletListItem.tsx","components/dialogs/WalletConnect/WalletConnectDialog.tsx","components/buttons/Connect.tsx","components/AppToolbar.tsx","components/textfields/Search.tsx","components/buttons/Search.tsx","components/VoteMarketsList.tsx","components/styled/ListItem.tsx","components/AppDrawer.tsx","components/Copyright.tsx","utils/constants.ts","components/Container.tsx","Routes.tsx","App.tsx","AppContainer.tsx","theme.ts","index.tsx","models/VoteMarket.ts"],"names":["useVoteMarketContext","useContext","VoteMarketContext","getAllVoteParticipants","voteMarketAddress","a","getAllItems","voteParticipants","voteParticipantsForSpecifiedVoteMarket","i","length","push","console","log","deleteVoteParticipant","hash","removeItem","getAllVoteAlternatives","voteAlternatives","voteAlternativesForSpecifiedVoteMarket","deleteVoteAlternative","voteMarketAddressValidator","connection","address","sha256","getVoteMarket","mintAddress","PublicKey","getAccountInfo","toBase58","voteMarketContextDefaults","currentVoteMarket","undefined","lastSelectedVoteMarketHash","setLastSelectedVoteMarketHash","getAllVerifiedVoteMarkets","list","getAssociatedVoteParticipants","getAssociatedVoteAlternatives","deleteVerifiedVoteMarket","createContext","VoteMarketContextProvider","children","useConnection","useLocalStorageState","setCurrentVoteMarket","history","useHistory","location","useLocation","useMemo","pathname","split","basename","checkVoteMarketAddress","useCallback","getOrSetVoteMarket","voteMarket","replace","useEffect","handleSetLastSelectedVoteMarketHash","Provider","value","getAllVoteMarkets","deleteVoteMarket","StyledButton","styled","Button","theme","padding","spacing","margin","minWidth","maxHeight","color","palette","text","secondary","backgroundColor","primary","dark","message","msgBuffer","TextEncoder","encode","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","getDB","openDB","upgrade","db","objectStoreNames","contains","createObjectStore","keyPath","getItem","tableName","tx","transaction","store","objectStore","get","result","getAll","setItem","add","delete","StyledImg","Avatar","width","height","WalletIcon","wallet","src","icon","alt","name","WalletListItem","onClick","props","ListItem","endIcon","StyledDialog","Dialog","main","display","justifyContent","lineHeight","flexShrink","marginRight","grey","background","boxShadow","flexGrow","borderRadius","fontSize","fontWeight","WalletConnectDialog","open","setOpen","title","featuredWallets","onClose","useWallet","wallets","select","useState","expanded","setExpanded","slice","featured","more","handleClose","event","reason","defaultPrevented","handleWalletClick","walletName","handleExpandClick","DialogTitle","IconButton","DialogContent","List","Collapse","in","timeout","unmountOnExit","position","contrastText","ConnectButton","publicKey","connect","connecting","disconnect","disconnecting","openModal","setOpenModal","bulletColor","buttonText","base58","stringToReplace","handleClick","error","Tooltip","variant","startIcon","style","disableRipple","StyledAppBar","AppBar","StyledMenuButton","StyledTypography","Typography","AppToolbar","handleDrawerToggle","foundVerifiedVoteMarkets","setFoundVerifiedVoteMarkets","check","Toolbar","edge","size","Search","shape","alpha","common","white","marginLeft","marginTop","marginBottom","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","TextFieldSearch","placeholder","inputProps","SearchButton","VoteMarketsList","light","voteMarketsList","StyledDrawer","SwipeableDrawer","drawerWidth","textAlign","scrollbarWidth","paddingRight","AppDrawer","drawerOpen","anchor","disableSwipeToOpen","swipeAreaWidth","onOpen","bottom","left","right","paddingTop","paddingBottom","userSelect","Copyright","noWrap","Date","getFullYear","Link","href","target","rel","StyledContainer","Box","Container","Home","lazy","Mint","InvalidVoteMarketAddress","VoteMarket","PageNotFound","Routes","withRouter","fallback","LinearProgress","exact","path","component","App","setDrawerOpen","e","type","key","AppContainer","network","WalletAdapterNetwork","Devnet","getPhantomWallet","getSolflareWallet","getLedgerWallet","getSolongWallet","getMathWallet","getSolletWallet","solanaEndpoint","clusterApiUrl","endpoint","autoConnect","themeOptions","warning","success","paper","default","typography","fontFamily","button","textTransform","h3","createTheme","render","ThemeProvider","document","getElementById","voteMarkets","setVoteMarket","existingVoteMarket","newVoteMarket","numberOfParticipants","maxRepresentatives","minimumContributionRequiredFromParticipant","startDate","now","stopDate","ownTokenAddress","pda","participants","alternatives","associatedVoteParticipants","associatedVoteAlternatives"],"mappings":"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","file":"static/js/main.0e9d8593.chunk.js","sourcesContent":["import { useContext } from \"react\";\n\nimport { VoteMarketContext } from \"../context/VoteMarket\";\n\n// hook to access global state\n// eslint-disable-next-line\nexport const useVoteMarketContext = () => useContext(VoteMarketContext);\n// like: const { theme } = useVoteContext();\n","import { IBase } from \"./Base\";\n\nimport { getItem, setItem, getAllItems, removeItem } from \"../utils/db\";\n\ninterface IVotingPowerTransfer {\n  voteMarketAddress: string;\n  fromAddress: string;\n  toAddress: string;\n  amount: number;\n}\n\nexport interface IVoteParticipant extends IBase {\n  address: string;\n  voteMarketAddress: string;\n  transfers: IVotingPowerTransfer[];\n}\n\nexport const getVoteParticipant = async (hash: string): Promise<IVoteParticipant> => {\n  try {\n    const voteParticipant = await getItem(\"voteParticipants\", hash);\n    return voteParticipant as IVoteParticipant;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getAllVoteParticipants = async (voteMarketAddress: string): Promise<IVoteParticipant[]> => {\n  try {\n    const voteParticipants = (await getAllItems(\"voteParticipants\")) as IVoteParticipant[];\n    const voteParticipantsForSpecifiedVoteMarket: IVoteParticipant[] = [];\n\n    for (let i = 0; i < voteParticipants.length; i++) {\n      if (voteParticipants[i].voteMarketAddress === voteMarketAddress) {\n        voteParticipantsForSpecifiedVoteMarket.push(voteParticipants[i]);\n      }\n    }\n\n    return voteParticipantsForSpecifiedVoteMarket;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const setVoteParticipant = async (voteParticipant: IVoteParticipant): Promise<void> => {\n  try {\n    await setItem(\"voteParticipants\", voteParticipant);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const deleteVoteParticipant = async (hash: string): Promise<void> => {\n  try {\n    await removeItem(\"voteParticipants\", hash);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import { IBase } from \"./Base\";\n\nimport { getItem, setItem, getAllItems, removeItem } from \"../utils/db\";\n\nexport interface IVoteAlternative extends IBase {\n  address: string;\n  voteMarketAddress: string;\n  proposedByAddress: string;\n  votingPowerFor: number;\n}\n\nexport const getVoteAlternative = async (hash: string): Promise<IVoteAlternative> => {\n  try {\n    const voteAlternative = await getItem(\"voteAlternatives\", hash);\n    return voteAlternative as IVoteAlternative;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getAllVoteAlternatives = async (voteMarketAddress: string): Promise<IVoteAlternative[]> => {\n  try {\n    const voteAlternatives = (await getAllItems(\"voteAlternatives\")) as IVoteAlternative[];\n    const voteAlternativesForSpecifiedVoteMarket: IVoteAlternative[] = [];\n\n    for (let i = 0; i < voteAlternatives.length; i++) {\n      if (voteAlternatives[i].voteMarketAddress === voteMarketAddress) {\n        voteAlternativesForSpecifiedVoteMarket.push(voteAlternatives[i]);\n      }\n    }\n\n    return voteAlternativesForSpecifiedVoteMarket;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const setVoteAlternative = async (voteAlternative: IVoteAlternative): Promise<void> => {\n  try {\n    await setItem(\"voteAlternatives\", voteAlternative);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const deleteVoteAlternative = async (hash: string): Promise<void> => {\n  try {\n    await removeItem(\"voteAlternatives\", hash);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import { Connection, PublicKey } from \"@solana/web3.js\";\n\nimport { getVoteMarket } from \"../models/VoteMarket\";\nimport { sha256 } from \"./db\";\n\nexport const voteMarketAddressValidator = async (connection: Connection, address: string): Promise<boolean> => {\n  if (address === \"\") {\n    return false;\n  } else if (address.length > 46 || address.length < 44) {\n    console.log(\"Address too small or too large\");\n    return false;\n  } else {\n    try {\n      const hash = await sha256(address);\n      const existingVoteMarket = await getVoteMarket(hash);\n      if (!existingVoteMarket) {\n        const mintAddress = new PublicKey(address);\n        const mintAccount = await connection.getAccountInfo(mintAddress);\n        if (mintAccount === null) {\n          console.log(\"Program needs to be built and deployed\");\n          return false;\n        }\n        // else if (!programInfo.executable) {\n        //   console.log(\"Program is not executable\");\n        //   return false;\n        // }\n        console.log(`Using token mint ${mintAddress.toBase58()}`);\n        return true;\n      } else {\n        return true;\n      }\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n};\n\n// export const voteExists = async (connection: Connection, programId: PublicKey) => {\n//   const programInfo = await connection.getAccountInfo(programId);\n//   if (programInfo === null) {\n//     console.log(\"Program needs to be built and deployed\");\n//     return false;\n//   } else if (!programInfo.executable) {\n//     console.log(\"Program is not executable\");\n//     return false;\n//   }\n//   console.log(`Using program ${programId.toBase58()}`);\n//   return true;\n// };\n//\ninterface ReturnForShitFunction {\n  isVoter: boolean;\n  balance: number;\n}\nexport const isParticipatingVoterValidator = (): ReturnForShitFunction => {\n  return {\n    isVoter: true,\n    balance: 100,\n  };\n};\n","import { FC, createContext, useEffect, useMemo, useCallback } from \"react\";\nimport { useConnection } from \"@solana/wallet-adapter-react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useLocalStorageState from \"use-local-storage-state\";\n\nimport { IVoteMarket, getAllVoteMarkets, deleteVoteMarket, getOrSetVoteMarket } from \"../models/VoteMarket\";\nimport { IVoteParticipant, getAllVoteParticipants } from \"../models/VoteParticipant\";\nimport { IVoteAlternative, getAllVoteAlternatives } from \"../models/VoteAlternative\";\n\nimport { voteMarketAddressValidator } from \"../utils/validators\";\nimport { sha256 } from \"../utils/db\";\n\ninterface IVoteMarketContext {\n  currentVoteMarket?: IVoteMarket;\n  lastSelectedVoteMarketHash: string;\n  setLastSelectedVoteMarketHash: (hash: string) => void;\n  getAllVerifiedVoteMarkets: () => Promise<IVoteMarket[]>;\n  getAssociatedVoteParticipants: (voteMarketAddress: string) => Promise<IVoteParticipant[]>;\n  getAssociatedVoteAlternatives: (voteMarketAddress: string) => Promise<IVoteAlternative[]>;\n  deleteVerifiedVoteMarket: (hash: string) => Promise<void>;\n}\n\nconst voteMarketContextDefaults: IVoteMarketContext = {\n  currentVoteMarket: undefined,\n  lastSelectedVoteMarketHash: \"\",\n  setLastSelectedVoteMarketHash: (hash: string) => {\n    console.log(hash);\n    return;\n  },\n  getAllVerifiedVoteMarkets: async () => {\n    const list: IVoteMarket[] = [];\n    return list;\n  },\n  getAssociatedVoteParticipants: async (voteMarketAddress: string) => {\n    console.log(voteMarketAddress);\n    const list: IVoteParticipant[] = [];\n    return list;\n  },\n  getAssociatedVoteAlternatives: async (voteMarketAddress: string) => {\n    console.log(voteMarketAddress);\n    const list: IVoteAlternative[] = [];\n    return list;\n  },\n  deleteVerifiedVoteMarket: async (hash: string) => {\n    console.log(hash);\n    return;\n  },\n};\n\nexport const VoteMarketContext = createContext<IVoteMarketContext>(voteMarketContextDefaults);\n\nexport const VoteMarketContextProvider: FC = ({ children }) => {\n  const { connection } = useConnection();\n  const [currentVoteMarket, setCurrentVoteMarket] = useLocalStorageState(\n    \"currentVoteMarket\",\n    voteMarketContextDefaults.currentVoteMarket\n  );\n  const [lastSelectedVoteMarketHash, setLastSelectedVoteMarketHash] = useLocalStorageState(\n    \"lastSelectedVoteMarketHash\",\n    \"\"\n  );\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [basename, voteMarketAddress] = useMemo(\n    () => [location.pathname.split(/[\\\\/]/)[1], location.pathname.split(/[\\\\/]/)[2]],\n    [location.pathname]\n  );\n\n  const checkVoteMarketAddress = useCallback(async () => {\n    if (!voteMarketAddress || voteMarketAddress === \"\") return;\n    // TODO Check first if valid address then if in db then solana\n    const validated = await voteMarketAddressValidator(connection, voteMarketAddress);\n    if (validated) {\n      const hash = await sha256(voteMarketAddress);\n      const voteMarket = await getOrSetVoteMarket(voteMarketAddress);\n      setCurrentVoteMarket(voteMarket);\n      setLastSelectedVoteMarketHash(hash);\n    } else {\n      history.replace(\"/invalid-vote-market-address\");\n    }\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (\n      voteMarketAddress &&\n      voteMarketAddress !== \"\" &&\n      basename === \"market\" // || basename === \"participate\" || basename === \"contribute\")\n    ) {\n      checkVoteMarketAddress();\n    }\n  }, [location.pathname]);\n\n  // receives address and not hash since consumed by client\n  const handleSetLastSelectedVoteMarketHash = useCallback(\n    async (address: string) => {\n      const hash = await sha256(address);\n      setLastSelectedVoteMarketHash(hash);\n    },\n    [location.pathname]\n  );\n\n  return (\n    <VoteMarketContext.Provider\n      value={{\n        currentVoteMarket,\n        lastSelectedVoteMarketHash,\n        setLastSelectedVoteMarketHash: handleSetLastSelectedVoteMarketHash,\n        getAllVerifiedVoteMarkets: getAllVoteMarkets,\n        getAssociatedVoteParticipants: getAllVoteParticipants,\n        getAssociatedVoteAlternatives: getAllVoteAlternatives,\n        deleteVerifiedVoteMarket: deleteVoteMarket,\n      }}\n    >\n      {children}\n    </VoteMarketContext.Provider>\n  );\n};\n","import { Button } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const StyledButton = styled(Button)(({ theme }) => ({\n  padding: theme.spacing(3),\n  margin: theme.spacing(1),\n  minWidth: \"170px\",\n  maxHeight: \"50px\",\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.primary.dark,\n  \"&:hover,&:focus\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n","import { openDB, DBSchema, IDBPDatabase } from \"idb\";\n\nimport { IVoteMarket } from \"../models/VoteMarket\";\nimport { IVoteParticipant } from \"../models/VoteParticipant\";\nimport { IVoteAlternative } from \"../models/VoteAlternative\";\n\ninterface DeliberativelyDB extends DBSchema {\n  voteMarkets: {\n    key: string;\n    value: IVoteMarket;\n  };\n\n  voteParticipants: {\n    key: string;\n    value: IVoteParticipant;\n  };\n\n  voteAlternatives: {\n    key: string;\n    value: IVoteAlternative;\n  };\n}\n\nexport const sha256 = async (message: string): Promise<string> => {\n  const msgBuffer = new TextEncoder().encode(message);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-256\", msgBuffer);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n\n  return hashHex;\n};\n\nexport const getDB = async (): Promise<IDBPDatabase<DeliberativelyDB>> => {\n  return await openDB<DeliberativelyDB>(\"deliberatively-db\", 1, {\n    upgrade(db) {\n      if (!db.objectStoreNames.contains(\"voteMarkets\")) {\n        db.createObjectStore(\"voteMarkets\", {\n          keyPath: \"hash\",\n        });\n      }\n\n      if (!db.objectStoreNames.contains(\"voteParticipants\")) {\n        db.createObjectStore(\"voteParticipants\", {\n          keyPath: \"hash\",\n        });\n      }\n\n      if (!db.objectStoreNames.contains(\"voteAlternatives\")) {\n        db.createObjectStore(\"voteAlternatives\", {\n          keyPath: \"hash\",\n        });\n      }\n    },\n  });\n};\n\nexport const getItem = async (\n  tableName: \"voteMarkets\" | \"voteParticipants\" | \"voteAlternatives\",\n  hash: string\n): Promise<IVoteMarket | IVoteParticipant | IVoteAlternative | undefined> => {\n  const db = await getDB();\n  const tx = db.transaction(tableName, \"readonly\");\n  const store = tx.objectStore(tableName);\n  const result = await store.get(hash);\n\n  return result;\n};\n\nexport const getAllItems = async (\n  tableName: \"voteMarkets\" | \"voteParticipants\" | \"voteAlternatives\"\n): Promise<(IVoteMarket | IVoteParticipant | IVoteAlternative)[]> => {\n  const db = await getDB();\n  const tx = db.transaction(tableName, \"readonly\");\n  const store = tx.objectStore(tableName);\n  const result = await store.getAll();\n\n  return result;\n};\n\nexport const setItem = async (\n  tableName: \"voteMarkets\" | \"voteParticipants\" | \"voteAlternatives\",\n  value: IVoteMarket | IVoteParticipant | IVoteAlternative\n): Promise<void> => {\n  const db = await getDB();\n  const tx = db.transaction(tableName, \"readwrite\");\n  const store = tx.objectStore(tableName);\n  await store.add(value);\n};\n\nexport const removeItem = async (\n  tableName: \"voteMarkets\" | \"voteParticipants\" | \"voteAlternatives\",\n  hash: string\n): Promise<void> => {\n  const db = await getDB();\n  const tx = db.transaction(tableName, \"readwrite\");\n  const store = tx.objectStore(tableName);\n  const result = await store.get(hash);\n  if (!result) {\n    console.log(\"Item with hash \" + hash + \" not found\");\n    return;\n  }\n  await store.delete(hash);\n  console.log(\"Deleted item with hash \", hash);\n};\n","import { FC, MouseEventHandler } from \"react\";\nimport { Avatar, Button, ListItem, ListItemProps } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Wallet } from \"@solana/wallet-adapter-wallets\";\n\nconst StyledImg = styled(Avatar)(({ theme }) => ({\n  width: theme.spacing(3),\n  height: theme.spacing(3),\n}));\n\ninterface WalletIconProps {\n  wallet: Wallet | null;\n}\n\nconst WalletIcon: FC<WalletIconProps> = ({ wallet }) => {\n  return wallet && <StyledImg src={wallet.icon} alt={`${wallet.name} icon`} />;\n};\n\ninterface WalletListItemProps extends Omit<ListItemProps, \"onClick\" | \"button\"> {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n  wallet: Wallet;\n}\n\nexport const WalletListItem: FC<WalletListItemProps> = ({ onClick, wallet, ...props }) => {\n  return (\n    <ListItem {...props}>\n      <Button onClick={onClick} endIcon={<WalletIcon wallet={wallet} />}>\n        {wallet.name}\n      </Button>\n    </ListItem>\n  );\n};\n","import { FC, Dispatch, ReactElement, SetStateAction, SyntheticEvent, useCallback, useMemo, useState } from \"react\";\nimport {\n  Button,\n  Collapse,\n  Dialog,\n  DialogContent,\n  DialogProps,\n  DialogTitle,\n  IconButton,\n  List,\n  ListItem,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletName } from \"@solana/wallet-adapter-wallets\";\nimport { WalletListItem } from \"./WalletListItem\";\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialog-paper\": {\n    width: theme.spacing(40),\n    margin: 0,\n  },\n  \"& .MuiDialogTitle-root\": {\n    backgroundColor: theme.palette.primary.main,\n    \"& .MuiTypography-root\": {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      lineHeight: theme.spacing(5) + \"px\",\n    },\n    \"& .MuiIconButton-root\": {\n      flexShrink: 1,\n      padding: theme.spacing(),\n      marginRight: theme.spacing(-1),\n      color: theme.palette.grey[500],\n    },\n  },\n  \"& .MuiDialogContent-root\": {\n    padding: 0,\n    \"& .MuiCollapse-root\": {\n      \"& .MuiList-root\": {\n        background: theme.palette.grey[900],\n      },\n    },\n    \"& .MuiList-root\": {\n      background: theme.palette.grey[900],\n      padding: 0,\n    },\n    \"& .MuiListItem-root\": {\n      boxShadow: \"inset 0 1px 0 0 \" + \"rgba(255, 255, 255, 0.1)\",\n      \"&:hover\": {\n        boxShadow: \"inset 0 1px 0 0 \" + \"rgba(255, 255, 255, 0.1)\" + \", 0 1px 0 0 \" + \"rgba(255, 255, 255, 0.05)\",\n      },\n      padding: 0,\n      \"& .MuiButton-endIcon\": {\n        margin: 0,\n      },\n      \"& .MuiButton-root\": {\n        flexGrow: 1,\n        justifyContent: \"space-between\",\n        padding: theme.spacing(1, 3),\n        borderRadius: undefined,\n        fontSize: \"1rem\",\n        fontWeight: 400,\n      },\n      \"& .MuiSvgIcon-root\": {\n        color: theme.palette.grey[500],\n      },\n    },\n  },\n}));\n\nexport interface WalletDialogProps extends Omit<DialogProps, \"title\" | \"open\"> {\n  open: boolean;\n  setOpen: Dispatch<SetStateAction<boolean>>;\n  featuredWallets?: number;\n  title?: ReactElement;\n}\n\nexport const WalletConnectDialog: FC<WalletDialogProps> = ({\n  open,\n  setOpen,\n  title = \"Select your wallet\",\n  featuredWallets = 3,\n  onClose,\n  ...props\n}) => {\n  const { wallets, select } = useWallet();\n  const [expanded, setExpanded] = useState(false);\n\n  const [featured, more] = useMemo(\n    () => [wallets.slice(0, featuredWallets), wallets.slice(featuredWallets)],\n    [wallets, featuredWallets]\n  );\n\n  const handleClose = useCallback(\n    (event: SyntheticEvent, reason?: \"backdropClick\" | \"escapeKeyDown\") => {\n      if (onClose) onClose(event, reason ? reason : \"backdropClick\");\n      if (!event.defaultPrevented) setOpen(false);\n    },\n    [setOpen, onClose]\n  );\n\n  const handleWalletClick = useCallback(\n    (event: SyntheticEvent, walletName: WalletName) => {\n      select(walletName);\n      handleClose(event);\n    },\n    [select, handleClose]\n  );\n\n  const handleExpandClick = useCallback(() => setExpanded(!expanded), [setExpanded, expanded]);\n\n  return (\n    <StyledDialog open={open} onClose={handleClose} {...props}>\n      <DialogTitle>\n        {title}\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {featured.map((wallet) => (\n            <WalletListItem\n              key={wallet.name}\n              onClick={(event) => handleWalletClick(event, wallet.name)}\n              wallet={wallet}\n            />\n          ))}\n          {more.length ? (\n            <>\n              <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <List>\n                  {more.map((wallet) => (\n                    <WalletListItem\n                      key={wallet.name}\n                      onClick={(event) => handleWalletClick(event, wallet.name)}\n                      wallet={wallet}\n                    />\n                  ))}\n                </List>\n              </Collapse>\n              <ListItem>\n                <Button onClick={handleExpandClick}>\n                  {expanded ? \"Less\" : \"More\"} options\n                  {expanded ? <ExpandLess /> : <ExpandMore />}\n                </Button>\n              </ListItem>\n            </>\n          ) : null}\n        </List>\n      </DialogContent>\n    </StyledDialog>\n  );\n};\n","import { FC, useState, useMemo, useCallback, MouseEventHandler } from \"react\";\nimport { Button, Tooltip } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport {\n  useWallet,\n  // useConnection\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletConnectDialog } from \"../dialogs/WalletConnect/WalletConnectDialog\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  position: \"relative\",\n  marginRight: theme.spacing(1),\n  color: theme.palette.primary.contrastText,\n}));\n\nexport const ConnectButton: FC = () => {\n  const { wallet, publicKey, connect, connecting, disconnect, disconnecting } = useWallet();\n  // const { connection } = useConnection();\n  const [openModal, setOpenModal] = useState(false);\n\n  const bulletColor = useMemo(() => {\n    if (connecting || disconnecting) {\n      return \"yellow\";\n    } else if (publicKey) {\n      // (async () => {\n      //   const balance = await connection.getBalance(publicKey);\n      //   console.log(balance);\n      // })();\n      return \"green\";\n    } else {\n      return \"red\";\n    }\n  }, [publicKey, connecting, disconnecting]);\n\n  const buttonText = useMemo(() => {\n    if (publicKey && !connecting) {\n      const base58 = publicKey.toBase58();\n      const stringToReplace = base58.slice(3, base58.length - 3);\n      return base58.replace(stringToReplace, \"...\");\n    } else if (connecting) {\n      return \"Connecting\";\n    } else {\n      return \"Connect\";\n    }\n  }, [publicKey, connecting]);\n\n  const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n    async (event) => {\n      if (!event.defaultPrevented) {\n        if (publicKey) {\n          try {\n            await disconnect();\n          } catch (error) {\n            console.log(error);\n          }\n        } else {\n          if (!wallet) {\n            try {\n              setOpenModal(!openModal);\n            } catch (error) {\n              console.log(error);\n            }\n          } else {\n            try {\n              await connect();\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        }\n      }\n    },\n    [connect, disconnect, publicKey, openModal, setOpenModal]\n  );\n\n  return (\n    <div>\n      <Tooltip title={publicKey ? \"Wallet connected\" : \"Wallet disconnected\"}>\n        <StyledButton\n          variant=\"outlined\"\n          startIcon={<FiberManualRecordIcon style={{ color: bulletColor }} />}\n          disableRipple\n          onClick={handleClick}\n        >\n          {buttonText}\n        </StyledButton>\n      </Tooltip>\n      <WalletConnectDialog open={openModal} setOpen={setOpenModal} title={<div>\"Connect wallet\"</div>} />\n    </div>\n  );\n};\n","import React, { FC, useState, useEffect, KeyboardEvent, MouseEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  // \u001f  Slide, useScrollTrigger\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nimport { useVoteMarketContext } from \"../hooks/useVoteMarketContext\";\n\nimport { ConnectButton } from \"./buttons/Connect\";\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n}));\n\nconst StyledMenuButton = styled(IconButton)(({ theme }) => ({\n  color: theme.palette.primary.contrastText,\n}));\n\nconst StyledTypography = styled(Typography)(() => ({\n  flexGrow: 1,\n}));\n\ninterface ToolbarProps {\n  handleDrawerToggle: (event: KeyboardEvent | MouseEvent) => void;\n}\n\nexport const AppToolbar: FC<ToolbarProps> = (props: ToolbarProps) => {\n  // const trigger = useScrollTrigger();\n  const { handleDrawerToggle } = props;\n  const [foundVerifiedVoteMarkets, setFoundVerifiedVoteMarkets] = useState(false);\n  const { getAllVerifiedVoteMarkets } = useVoteMarketContext();\n\n  const check = async () => {\n    const markets = await getAllVerifiedVoteMarkets();\n    if (markets) {\n      setFoundVerifiedVoteMarkets(false); // true\n    }\n  };\n\n  useEffect(() => {\n    check();\n  }, [foundVerifiedVoteMarkets, setFoundVerifiedVoteMarkets, getAllVerifiedVoteMarkets]);\n\n  return (\n    // <Slide appear={false} direction=\"down\" in={!trigger}>\n    // </Slide>\n    <StyledAppBar position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <StyledMenuButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          size=\"large\"\n          disableRipple\n          onClick={foundVerifiedVoteMarkets ? handleDrawerToggle : undefined}\n        >\n          <MenuIcon />\n        </StyledMenuButton>\n        <StyledTypography variant=\"h6\">Deliberatively</StyledTypography>\n        <ConnectButton />\n      </Toolbar>\n    </StyledAppBar>\n  );\n};\n","import { FC } from \"react\";\nimport { InputBase } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  marginTop: theme.spacing(1.1),\n  marginBottom: theme.spacing(1.1),\n  width: \"100%\",\n  maxHeight: \"50px\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nexport const TextFieldSearch: FC = () => {\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase placeholder=\"Search…\" inputProps={{ \"aria-label\": \"search\" }} />\n    </Search>\n  );\n};\n","import { FC } from \"react\";\n// import { PublicKey } from \"@solana/web3.js\";\n// import { Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n// import { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\n\nimport { StyledButton } from \"../styled/Button\";\n\nexport const SearchButton: FC = () => {\n  // const { connection } = useConnection();\n  // const { publicKey } = useWallet();\n\n  const handleClick = async () => {\n    console.log(\"Search...\");\n\n    // Construct my token class\n    // const myMint = new PublicKey(\"My Mint Public Address\");\n    // const myToken = new Token(connection, myMint, TOKEN_PROGRAM_ID, fromWallet);\n    // // Create associated token accounts for my token if they don't exist yet\n    // const myTokenAccount = await myToken.getOrCreateAssociatedAccountInfo(publicKey);\n  };\n\n  return <StyledButton onClick={handleClick}>Search</StyledButton>;\n};\n","import { FC, useEffect } from \"react\";\nimport { List } from \"@mui/material\";\n\nimport { GoToVoteMarket } from \"./buttons/GoToVoteMarket\";\n\nimport { IVoteMarket } from \"../models/VoteMarket\";\n\nimport { useVoteMarketContext } from \"../hooks/useVoteMarketContext\";\n\nexport const VoteMarketsList: FC = () => {\n  const { getAllVerifiedVoteMarkets } = useVoteMarketContext();\n\n  let voteMarketsList: IVoteMarket[] = [];\n  useEffect(() => {\n    async () => {\n      voteMarketsList = await getAllVerifiedVoteMarkets();\n    };\n  }, [getAllVerifiedVoteMarkets]);\n\n  return (\n    <List>\n      {voteMarketsList.map((voteMarket: IVoteMarket) => {\n        <GoToVoteMarket voteMarket={voteMarket} />;\n      })}\n    </List>\n  );\n};\n","import { ListItem } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nexport const StyledListItem = styled(ListItem)(({ theme }) => ({\n  padding: theme.spacing(3),\n  minWidth: \"150px\",\n  maxHeight: \"50px\",\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.light,\n}));\n","import { FC, KeyboardEvent, MouseEvent } from \"react\";\nimport { SwipeableDrawer } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { TextFieldSearch } from \"./textfields/Search\";\nimport { SearchButton } from \"./buttons/Search\";\nimport { VoteMarketsList } from \"./VoteMarketsList\";\n\nimport { drawerWidth } from \"../utils/constants\";\n\nconst StyledDrawer = styled(SwipeableDrawer)(({ theme }) => ({\n  width: drawerWidth + 8,\n  textAlign: \"center\",\n  scrollbarWidth: \"none\",\n  paddingLeft: theme.spacing(1),\n  paddingRight: theme.spacing(1),\n}));\n\ninterface DrawerProps {\n  drawerOpen: boolean;\n  handleDrawerToggle: (event: KeyboardEvent | MouseEvent) => void;\n}\n\nexport const AppDrawer: FC<DrawerProps> = (props: DrawerProps) => {\n  const { drawerOpen, handleDrawerToggle } = props;\n\n  return (\n    <StyledDrawer\n      anchor=\"left\"\n      variant=\"temporary\"\n      disableSwipeToOpen={true}\n      swipeAreaWidth={0}\n      open={drawerOpen}\n      onOpen={handleDrawerToggle}\n      onClose={handleDrawerToggle}\n    >\n      <TextFieldSearch />\n      <SearchButton />\n      <VoteMarketsList />\n    </StyledDrawer>\n  );\n};\n","import { FC } from \"react\";\nimport { Typography, Link } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { copyrightHeight } from \"../utils/constants\";\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: 0,\n  left: 0,\n  right: 0,\n  display: \"flex\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  height: copyrightHeight,\n  fontSize: \"0.85em\",\n  color: theme.palette.primary.contrastText,\n  backgroundColor: theme.palette.primary.main,\n  paddingLeft: theme.spacing(1),\n  paddingTop: theme.spacing(0.2),\n  paddingBottom: theme.spacing(0.2),\n  userSelect: \"none\",\n}));\n\nexport const Copyright: FC = () => {\n  return (\n    <StyledTypography variant=\"subtitle2\" noWrap>\n      {`Copyright © ${new Date().getFullYear()} `}{\" \"}\n      <Link color=\"inherit\" href=\"https://www.dkaroukis.com\" target=\"_blank\" rel=\"noopener\">\n        Dim Karoukis\n      </Link>\n      {\" & \"}\n      <Link color=\"inherit\" href=\"https://www.fuzznets.com\" target=\"_blank\" rel=\"noopener\">\n        Fuzznets P.C\n      </Link>\n      {\". All rights reserved.\"}\n    </StyledTypography>\n  );\n};\n","export const drawerWidth = 300;\nexport const copyrightHeight = 20;\nexport const toolbarHeight = 47;\n","import { FC } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { copyrightHeight, toolbarHeight } from \"../utils/constants\";\n\nconst StyledContainer = styled(Box)(({ theme }) => ({\n  marginTop: `${toolbarHeight}px`,\n  marginLeft: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  width: \"100vw\",\n  height: `calc(100vh - ${copyrightHeight}px - ${toolbarHeight}px)`,\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.primary.light,\n}));\n\nexport const Container: FC = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n","import { FC, Suspense, lazy } from \"react\";\nimport { withRouter, Route, Switch, useLocation } from \"react-router-dom\";\nimport { LinearProgress } from \"@mui/material\";\n// import { createBrowserHistory } from \"history\";\n\nconst Home = lazy(() => import(\"./routes/Home\"));\nconst Mint = lazy(() => import(\"./routes/Mint\"));\nconst InvalidVoteMarketAddress = lazy(() => import(\"./routes/InvalidVoteMarketAddress\"));\nconst VoteMarket = lazy(() => import(\"./routes/VoteMarket\"));\n// const Participate = lazy(() => import(\"./routes/Participate\"));\n// const Contribute = lazy(() => import(\"./routes/Contribute\"));\nconst PageNotFound = lazy(() => import(\"./routes/PageNotFound\"));\n\nconst RoutesSwitch: FC = () => {\n  const location = useLocation();\n  // const history = createBrowserHistory();\n\n  return (\n    <Suspense fallback={<LinearProgress variant=\"indeterminate\" />}>\n      <Switch location={location}>\n        {/*<Router history={history}>*/}\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/mint\" component={Mint} />\n        <Route exact path=\"/market/:voteMarketAddress\" component={VoteMarket} />\n        {/*<Route exact path=\"/participate/:voteMarketAddress\" component={Participate} />\n           <Route exact path=\"/contribute/:voteMarketAddress\" component={Contribute} />*/}\n        <Route exact path=\"/invalid-vote-market-address\" component={InvalidVoteMarketAddress} />\n        <Route component={PageNotFound} />\n        {/*</Router>*/}\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport const Routes = withRouter(RoutesSwitch);\n","import { FC, useState, KeyboardEvent, MouseEvent } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { VoteMarketContextProvider } from \"./context/VoteMarket\";\n\nimport { AppToolbar } from \"./components/AppToolbar\";\nimport { AppDrawer } from \"./components/AppDrawer\";\nimport { Copyright } from \"./components/Copyright\";\nimport { Container } from \"./components/Container\";\n\nimport { Routes } from \"./Routes\";\n\nexport const App: FC = () => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const handleDrawerToggle = (e: KeyboardEvent | MouseEvent) => {\n    if (e.type === \"keydown\" && ((e as KeyboardEvent).key === \"Tab\" || (e as KeyboardEvent).key === \"Shift\")) {\n      return;\n    }\n\n    setDrawerOpen(!drawerOpen);\n  };\n\n  return (\n    <BrowserRouter>\n      <VoteMarketContextProvider>\n        <AppToolbar handleDrawerToggle={handleDrawerToggle} />\n        <AppDrawer drawerOpen={drawerOpen} handleDrawerToggle={handleDrawerToggle} />\n        <Container>\n          <Routes />\n        </Container>\n        <Copyright />\n      </VoteMarketContextProvider>\n    </BrowserRouter>\n  );\n};\n","import { FC, useMemo } from \"react\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport {\n  getLedgerWallet,\n  getMathWallet,\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolongWallet,\n  // getTorusWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\n\nimport { App } from \"./App\";\n\nexport const AppContainer: FC = () => {\n  const network = WalletAdapterNetwork.Devnet; // or Testnet, Mainnet-beta\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      // getTorusWallet({\n      //   options: {\n      //     // TODO: Get your own tor.us wallet client Id\n      //     clientId: \"BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ\",\n      //   },\n      // }),\n      getLedgerWallet(),\n      getSolongWallet(),\n      getMathWallet(),\n      getSolletWallet(),\n    ],\n    [network]\n  );\n\n  const solanaEndpoint = useMemo(() => clusterApiUrl(network), [network]);\n  // const solanaEndpoint = \"http://localhost:8899\";\n\n  return (\n    <ConnectionProvider endpoint={solanaEndpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <App />\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n","import { createTheme, ThemeOptions } from \"@mui/material/styles\";\n\nconst themeOptions: ThemeOptions = {\n  palette: {\n    primary: {\n      main: \"#f9f9f9\",\n      contrastText: \"#111\",\n      dark: \"#666666\",\n    },\n    secondary: {\n      main: \"#ad57da\",\n    },\n    error: {\n      main: \"#af0c00\",\n    },\n    warning: {\n      main: \"#ecb158\",\n    },\n    text: {\n      primary: \"#121212\",\n      secondary: \"f9f9f9\",\n    },\n    success: {\n      main: \"#1d7d22\",\n    },\n    background: {\n      paper: \"#f9f9f9\",\n      default: \"#ffffff\",\n    },\n  },\n  typography: {\n    fontFamily: [\"Nunito\", \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\"].join(\",\"),\n    button: {\n      textTransform: \"none\",\n    },\n    h3: {\n      fontSize: \"2.3rem\",\n    },\n  },\n};\n\nexport const theme = createTheme(themeOptions);\n","import { render } from \"react-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport \"./index.css\";\n\nimport { AppContainer } from \"./AppContainer\";\n\nimport { theme } from \"./theme\";\n\nrender(\n  <ThemeProvider theme={theme}>\n    <AppContainer />\n  </ThemeProvider>,\n  document.getElementById(\"app\")\n);\n","import { IBase } from \"./Base\";\nimport { IVoteParticipant, getAllVoteParticipants, deleteVoteParticipant } from \"./VoteParticipant\";\nimport { IVoteAlternative, getAllVoteAlternatives, deleteVoteAlternative } from \"./VoteAlternative\";\n\nimport { sha256, getItem, setItem, getAllItems, removeItem } from \"../utils/db\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nexport interface IVoteMarket extends IBase {\n  // token mint Pubkey\n  address: string;\n  numberOfParticipants: number;\n  // rebalancingCost: number;\n  maxRepresentatives: number;\n  // in unix timestamp\n  startDate: number;\n  // after that only representatives can propose vote alternatives\n  stopDate: number;\n  minimumContributionRequiredFromParticipant: number;\n  pda: string;\n  ownTokenAddress: string;\n  participants: IVoteParticipant[];\n  alternatives: IVoteAlternative[];\n}\n\nexport const getVoteMarket = async (hash: string): Promise<IVoteMarket> => {\n  try {\n    const voteMarket = await getItem(\"voteMarkets\", hash);\n    return voteMarket as IVoteMarket;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getAllVoteMarkets = async (): Promise<IVoteMarket[]> => {\n  try {\n    const voteMarkets = await getAllItems(\"voteMarkets\");\n    return voteMarkets as IVoteMarket[];\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const setVoteMarket = async (voteMarket: IVoteMarket): Promise<void> => {\n  try {\n    await setItem(\"voteMarkets\", voteMarket);\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getOrSetVoteMarket = async (address: string): Promise<IVoteMarket> => {\n  try {\n    const hash = await sha256(address);\n    const existingVoteMarket = await getVoteMarket(hash);\n    if (!existingVoteMarket) {\n      const newVoteMarket: IVoteMarket = {\n        hash,\n        address,\n        numberOfParticipants: 10,\n        // rebalancingCost: 0.01,\n        maxRepresentatives: 3,\n        minimumContributionRequiredFromParticipant: 1,\n        startDate: Date.now(),\n        stopDate: Date.now() + 1000 * 60 * 60 * 30,\n        ownTokenAddress: new PublicKey(\"\").toString(),\n        pda: new PublicKey(\"\").toString(),\n        participants: [],\n        alternatives: [],\n      };\n      await setVoteMarket(newVoteMarket);\n      return newVoteMarket;\n    } else {\n      return existingVoteMarket;\n    }\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\n// also deletes associated vote participants and alternatives\nexport const deleteVoteMarket = async (hash: string): Promise<void> => {\n  try {\n    const voteMarket = await getVoteMarket(hash);\n    const voteMarketAddress = voteMarket.address;\n    await removeItem(\"voteMarkets\", hash);\n    const associatedVoteParticipants = await getAllVoteParticipants(voteMarketAddress);\n    for (let i = 0; i < associatedVoteParticipants.length; i++) {\n      await deleteVoteParticipant(associatedVoteParticipants[i].hash);\n    }\n    const associatedVoteAlternatives = await getAllVoteAlternatives(voteMarketAddress);\n    for (let i = 0; i < associatedVoteAlternatives.length; i++) {\n      await deleteVoteAlternative(associatedVoteAlternatives[i].hash);\n    }\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n"],"sourceRoot":""}